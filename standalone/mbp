#!/bin/bash
#ls env/bin/activate

util_path=$(dirname $0)/../plugin/util.py
root_path=$(realpath $(dirname $0))
[ -f $util_path ] && root_path=$(realpath $(dirname $0)/../..)
echo "root_path is $root_path"

# if not use docker - remove dockervar
if [ -f $util_path ] && [ "$1" = "" ]; then
    [ -f dockervar ] && rm dockervar
fi

if [ -f $util_path ] && [ "$1" = "docker" ]; then 
    if [ ! -x "$(command -v docker)" ]; then
        echo "Install docker. See https://docs.docker.com/engine/install"
        exit 1
    fi
    echo 'DOCKER="docker run --rm -it -v $PWD:/mbstandalone mbplugin "' > dockervar
    echo 'DOCKER_STD="docker run --rm -it -v $PWD:/mbstandalone mbplugin "' >> dockervar
    echo 'DOCKER_WEB="docker run --name mbplugin -d -v $PWD:/mbstandalone -p 127.0.0.1:19777:19777 mbplugin "' >> dockervar
    echo 'DOCKER_EXEC="docker exec -it mbplugin "' >> dockervar
    # if ! docker ps --format '{{.Names}}' | grep -w mbplugin &> /dev/null; then ... ; fi
    # docker ps --format '{{.Names}}' | grep -w mbplugin &> /dev/null && echo "RUN"

    # Build image for playwright
    docker build --tag mbplugin mbplugin/docker
    # -p 127.0.0.1:19777:19777
fi

# if exist dockervar - set DOCKER variables
[ -f dockervar ] && . ./dockervar 
# if mbplugin container is running use docker exec instead docker run 
docker ps --format '{{.Names}}' | grep -w mbplugin &> /dev/null && DOCKER=$DOCKER_EXEC

# port mapping for docker only for web-server start
if [ "$DOCKER" != "" ] && [ "$1 $2" = "web-server start" ]; then
    #DOCKER=${DOCKER/ mbplugin/ -p 127.0.0.1:19777:19777 mbplugin}
    echo "$DOCKER_STD python mbplugin/plugin/util.py set ini/HttpServer/host=0.0.0.0"
    $DOCKER_STD python mbplugin/plugin/util.py set ini/HttpServer/host=0.0.0.0
    docker ps    --format '{{.Names}}' | grep -w mbplugin &> /dev/null && docker stop mbplugin
    docker ps -a --format '{{.Names}}' | grep -w mbplugin &> /dev/null && docker rm   mbplugin
    DOCKER=$DOCKER_WEB
fi

pythonver=$(python -V 2>&1 | sed 's/.* \([0-9]\).\([0-9]\).*/\1\2/')
if [ ! -f dockervar ] && [ "$pythonver" -lt "38" ] && [ -f env/bin/activate ] ; then 
    . env/bin/activate
fi

pythonver=$(python -V 2>&1 | sed 's/.* \([0-9]\).\([0-9]\).*/\1\2/')
if [ ! -f dockervar ] && [ "$pythonver" -lt "38" ] ; then
    echo "This script requires python 3.8 or greater, you have $pythonver"
    exit 1
fi

# ../plugin/util.py exists go into installation mode
if [ -f $util_path ]; then 
    echo "The file $(realpath $util_path) exist";
    cd $root_path
    cp mbplugin/standalone/mbp .
    chmod +x mbp
    [ ! -f phones.ini ] && cp mbplugin/standalone/phones.ini . 
    [ -f dockervar ] && echo $DOCKER 
    $DOCKER_STD python mbplugin/plugin/util.py init
    $DOCKER_STD python mbplugin/plugin/util.py pip-update
    $DOCKER_STD python mbplugin/plugin/util.py install-chromium
    $DOCKER_STD python mbplugin/plugin/util.py check-import
    $DOCKER_STD python mbplugin/plugin/util.py check-ini
    $DOCKER_STD python mbplugin/plugin/util.py clear-browser-cache
    $DOCKER_STD python mbplugin/plugin/util.py check-playwright
    exit 0
fi

cd $root_path
[ -f dockervar ] && echo $DOCKER python mbplugin/plugin/util.py $*
$DOCKER python mbplugin/plugin/util.py $*
